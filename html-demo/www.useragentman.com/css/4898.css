/* 
 * Form using only pseudo-classes supported by the CSS3 UI spec so far
 * (and simulated in the other browsers using html5Forms.js).
 */


/*
 * STEP 1: Show the user when a form field is required with an orange star.
 */

/* Browsers that implement HTML5 Forms Natively */
form.standard input:required, 
form.standard textarea:required{
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/asterisk_orange.png") no-repeat right top;
}

/* Polyfill */
form.standard input[required] {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/asterisk_orange.png") no-repeat right top;
}



form.standard input[type="checkbox"][required] {
	background-image: none !important;
}



/*
 * STEP 2: Show the user when a form field has valid data in it with a green checkmark.
 */

/* Browsers that implement HTML5 Forms Natively */
form.standard input[required]:valid, 
form.standard textarea[required]:valid {
	/* Make this important if you want IE10 to work right. */
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/tick.png") no-repeat right top !important;
}

/* Polyfill */
form.standard input[required].wf2_valid {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/tick.png") no-repeat right top;
}




/*
 * STEP 3: Show the user when a form field has invalid data in it with a red 'X'.
 */

/* Browsers that implement HTML5 Forms Natively */
form.standard input:focus:invalid, 
form.standard textarea:focus:invalid {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/cancel.png") no-repeat right top;
}

/* Polyfill */
form.standard input.wf2_invalid.wf2_focus,
form.standard textarea.wf2_invalid.wf2_focus {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/cancel.png") no-repeat right top;
}





/*
   Proof of concept for proposed pseudo-classes:
   
   :isBlank, :notBlank - used when a form element is blank/not blank.
   :lostFocus - used when a form element loses focus.
   form:submitAttempted - used when a form submit is attempted.
   
   
   Note that these pseudo-classes are simulated by the html5Forms.js 
   library using classes beginning with wf2_ (for example, :isBlank
   is simulated with the class wf2_isBlank). 
   
   Note also that I believe these selectors would be less repetitive
   if there was a selector for form that could cover  *all*
   possible form elements (e.g. form::field).  If implemented, a rule like:
   
   input:focus:invalid , 
   textarea:focus:invalid,
   select:focus:invalid {
	  ...
   }
   
   could be shortened to be:
   
   form::field:focus:invalid, 
   {
	  ...
   }
   
   You will also note that I use a separate span (.validationMarker) to show 
   the validity hints for each form elements, since ::after could not be used,
   due to form fields elements like input being self-closing.  It would be nice
   there could be a pseudo-element that could do this, since I an sure this
   use-case would be a common one and developers wouldn't want to pollute 
   a document with extra spans and divs if they could help it.
   
   Another nice to have would be a way to style the <label> for a form element
   to denote that it's field is required or optional.  At the moment, there is no
   nice way of doing that and I believe it is something developers would really
   like to have.  Maybe the rule could look something like:
   
   input[required]::label::after {
   	  content: "*";
   }
   
   Which would add a * to the end of a label of a required field (which is a pretty
   starndard usecase in forms today).
   
   This stylesheet has only been tested with the latest versions of Firefox, Chrome and Safari.


*/



/* Default styling for form elements */
form.experiment input, 
form.experiment textarea, 
form.experiment select {
	position: relative;
}


/* 
 * Styling of validation markers after form elements (can't use :after, 
 * since this a form element is not a content node)
 */
form.experiment input + .validationMarker, 
form.experiment textarea + .validationMarker,
form.experiment select + .validationMarker {
	
	width: 20px;
	height: 20px;
	margin-left: 10px;
	display: inline-block ;
	
}


/* turn off box-shadowing for required form fields to look consistent cross-browser */
form.experiment input:required, 
form.experiment textarea:required, 
form.experiment select:required
{
	box-shadow: none;
}

/* Polyfill */
form.experiment input.wf2_required, 
form.experiment textarea.wf2_required, 
form.experiment select.wf2_required


{
	box-shadow: none;
}



/* Browsers that implement HTML5 Forms Natively */
form.experiment input:required:valid + .validationMarker, 
form.experiment textarea:required:valid + .validationMarker,
form.experiment select:required:valid + .validationMarker
{
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/tick.png") no-repeat left top transparent !important;
}


/* Polyfill */
form.experiment input.wf2_required.wf2_valid + .validationMarker, 
form.experiment textarea.wf2_required.wf2_valid + .validationMarker,
form.experiment select.wf2_required.wf2_valid + .validationMarker {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/tick.png") no-repeat left top transparent !important;
}



 

/*
 * STEP 3: Show the user when a form field has invalid data in it with a red 'X'.
 */


/* Browsers that implement HTML5 Forms Natively */
form.experiment input:focus:invalid + .validationMarker, 
form.experiment textarea:focus:invalid + .validationMarker,
form.experiment select:focus:invalid + .validationMarker
 {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/cancel.png") no-repeat left top transparent;
}

/* Polyfill */
form.experiment input.wf2_focus.wf2_invalid + .validationMarker, 
form.experiment textarea.wf2_focus.wf2_invalid + .validationMarker,
form.experiment select.wf2_focus.wf2_invalid + .validationMarker

 {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/cancel.png") no-repeat left top transparent;
}

/* 
 * These rules ensure that if the user hasn't entered anything in the form element, then
 * there is not X ....
 */
form.experiment input:focus:invalid.wf2_isBlank + .validationMarker,
form.experiment textarea:focus:invalid.wf2_isBlank + .validationMarker,
form.experiment select:focus:invalid.wf2_isBlank + .validationMarker
{
	background: none no-repeat left top transparent !important;
}

/* Polyfill */
form.experiment input.wf2_focus.wf2_invalid.wf2_isBlank + .validationMarker,
form.experiment textarea.wf2_focus.wf2_invalid.wf2_isBlank + .validationMarker,
form.experiment select.wf2_focus.wf2_invalid.wf2_isBlank + .validationMarker

 {
	background: none no-repeat left top transparent !important;
}

/*
 * Highlight the form elements that are invalid with a red X if: 
 * 
 * 1) A form submit is attempted
 * 2) The user focuses in on a form element and then types in some invalid data.
 * 3) The user focuses on a form element, and then unfocuses when the form element is invalid
 */
form.experiment.wf2_submitAttempted input:invalid + .validationMarker, 
form.experiment.wf2_submitAttempted textarea:invalid + .validationMarker,
form.experiment.wf2_submitAttempted select:invalid + .validationMarker,
form.experiment input:focus:invalid.wf2_notBlank + .validationMarker, 
form.experiment textarea:focus:invalid.wf2_notBlank + .validationMarker,
form.experiment select:focus:invalid.wf2_notBlank + .validationMarker,
form.experiment input.wf2_lostFocus:invalid + .validationMarker, 
form.experiment textarea.wf2_lostFocus:invalid + .validationMarker,
form.experiment select.wf2_lostFocus:invalid + .validationMarker
{
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/cancel.png") no-repeat left top transparent !important;
	
}

/* polyfill */
form.experiment.wf2_submitAttempted input.wf2_invalid + .validationMarker, 
form.experiment.wf2_submitAttempted textarea.wf2_invalid + .validationMarker,
form.experiment.wf2_submitAttempted select.wf2_invalid + .validationMarker,
form.experiment input.wf2_focus.wf2_invalid.wf2_notBlank + .validationMarker, 
form.experiment textarea.wf2_focus.wf2_invalid.wf2_notBlank + .validationMarker,
form.experiment select.wf2_focus.wf2_invalid.wf2_notBlank + .validationMarker,
form.experiment input.wf2_lostFocus.wf2_invalid + .validationMarker, 
form.experiment textarea.wf2_lostFocus.wf2_invalid + .validationMarker,
form.experiment select.wf2_lostFocus.wf2_invalid + .validationMarker


 {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/cancel.png") no-repeat left top transparent !important;
	
}


/*
 * Highlight the form elements that are valid with a green check if
 * 
 * 1) A form submit is attempted
 * 2) If the form element is not blank.
 */


form.experiment.wf2_submitAttempted input:required:valid + .validationMarker, 
form.experiment.wf2_submitAttempted textarea:required:valid + .validationMarker,
form.experiment.wf2_submitAttempted select:required:valid + .validationMarker,
form.experiment input:valid.wf2_notBlank + .validationMarker, 
form.experiment textarea:valid.wf2_notBlank + .validationMarker,
form.experiment select:valid.wf2_notBlank + .validationMarker
{
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/tick.png") no-repeat left top transparent;
	
}

/* polyfill */
form.experiment.wf2_submitAttempted input.wf2_required.wf2_valid + .validationMarker, 
form.experiment.wf2_submitAttempted textarea.wf2_required.wf2_valid + .validationMarker,
form.experiment.wf2_submitAttempted select.wf2_required.wf2_valid + .validationMarker,
form.experiment input.wf2_valid.wf2_notBlank + .validationMarker, 
form.experiment textarea.wf2_valid.wf2_notBlank + .validationMarker,
form.experiment select.wf2_valid.wf2_notBlank + .validationMarker


 {
	background:url("/tests/html5Forms.beta/tests/html5Forms/images/tick.png") no-repeat left top transparent;
	
}


/*
 * What follows now is unrelated pixel-pushing
 */
input[type="submit"] {
	float: left;
}



